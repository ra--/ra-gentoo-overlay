diff -Naur glest-source-3.0.0.org/configure.ac glest-source-3.0.0/configure.ac
--- configure.ac	2008-01-31 10:27:01.000000000 +0100
+++ configure.ac	2008-02-01 14:00:52.000000000 +0100
@@ -116,7 +116,7 @@
 XIPH_PATH_OGG(, [AC_MSG_ERROR([Please install ogg/vorbis])])
 
 AM_OPTIONS_WXCONFIG
-AM_PATH_WXCONFIG([2.6.0], [WX_AVAILABLE="yes"], [WX_AVAILABLE="no"], [std,gl], [--unicode=no])
+AM_PATH_WXCONFIG([2.8.0], [WX_AVAILABLE="yes"], [WX_AVAILABLE="no"], [std,gl])
 AC_SUBST([WX_AVAILABLE])
 
 AC_INIT_JAM
diff -Naur glest-source-3.0.0.org/glest_map_editor/main.cpp glest-source-3.0.0/glest_map_editor/main.cpp
--- glest_map_editor/main.cpp	2008-01-22 23:55:24.000000000 +0100
+++ glest_map_editor/main.cpp	2008-02-01 14:54:39.000000000 +0100
@@ -10,8 +10,8 @@
 
 namespace Glest{ namespace MapEditor{
 
-const string MainWindow::versionString= "v1.2.3";
-const string MainWindow::winHeader= "Glest Map Editor " + versionString + " - Built: " + __DATE__;
+const wxString MainWindow::versionString=_("v1.2.3");
+const wxString MainWindow::winHeader= _("Glest Map Editor ") + versionString + _(" - Built: ") + _T(__DATE__);
 
 // ===============================================
 //	class MainWindow
@@ -40,34 +40,34 @@
 	
 	//file
 	menuFile= new wxMenu();
-	menuFile->Append(miFileLoad, "Load");
+	menuFile->Append(miFileLoad, _("Load"));
 	menuFile->AppendSeparator();
-	menuFile->Append(miFileSave, "Save");
-	menuFile->Append(miFileSaveAs, "Save As");
+	menuFile->Append(miFileSave, _("Save"));
+	menuFile->Append(miFileSaveAs, _("Save As"));
 	menuFile->AppendSeparator();
-	menuFile->Append(miFileExit, "Exit");
-	menuBar->Append(menuFile, "File");
+	menuFile->Append(miFileExit, _("Exit"));
+	menuBar->Append(menuFile, _("File"));
 
 	//edit
 	menuEdit= new wxMenu();
-	menuEdit->Append(miEditReset, "Reset");
-	menuEdit->Append(miEditResetPlayers, "Reset Players");
-	menuEdit->Append(miEditResize, "Resize");
-	menuEdit->Append(miEditFlipX, "Flip X");
-	menuEdit->Append(miEditFlipY, "Flip Y");
-	menuEdit->Append(miEditRandomizeHeights, "Randomize Heights");
-	menuEdit->Append(miEditRandomize, "Randomize");
-	menuEdit->Append(miEditSwitchSurfaces, "Switch Surfaces");
-	menuEdit->Append(miEditInfo, "Info");
-	menuEdit->Append(miEditAdvanced, "Advanced");
-	menuBar->Append(menuEdit, "Edit");
+	menuEdit->Append(miEditReset, _("Reset"));
+	menuEdit->Append(miEditResetPlayers, _("Reset Players"));
+	menuEdit->Append(miEditResize, _("Resize"));
+	menuEdit->Append(miEditFlipX, _("Flip X"));
+	menuEdit->Append(miEditFlipY, _("Flip Y"));
+	menuEdit->Append(miEditRandomizeHeights, _("Randomize Heights"));
+	menuEdit->Append(miEditRandomize, _("Randomize"));
+	menuEdit->Append(miEditSwitchSurfaces, _("Switch Surfaces"));
+	menuEdit->Append(miEditInfo, _("Info"));
+	menuEdit->Append(miEditAdvanced, _("Advanced"));
+	menuBar->Append(menuEdit, _("Edit"));
 
 	//misc
 	menuMisc= new wxMenu();
-	menuMisc->Append(miMiscResetZoomAndPos, "Reset zoom and pos");
-	menuMisc->Append(miMiscAbout, "About");
-	menuMisc->Append(miMiscHelp, "Help");
-	menuBar->Append(menuMisc, "Misc");
+	menuMisc->Append(miMiscResetZoomAndPos, _("Reset zoom and pos"));
+	menuMisc->Append(miMiscAbout, _("About"));
+	menuMisc->Append(miMiscHelp, _("Help"));
+	menuBar->Append(menuMisc, _("Misc"));
 
 	//brush
 	menuBrush= new wxMenu();
@@ -75,66 +75,70 @@
 	//height
 	menuBrushHeight= new wxMenu();
 	for(int i=0; i<heightCount; ++i){
-		menuBrushHeight->AppendCheckItem(miBrushHeight+i+1, intToStr(i-heightCount/2).c_str());
+		menuBrushHeight->AppendCheckItem(miBrushHeight+i+1, intToWxStr(i-heightCount/2).c_str());
 	}	
 	menuBrushHeight->Check(miBrushHeight + 1 + heightCount/2, true);
-	menuBrush->Append(miBrushHeight, "Height", menuBrushHeight);
+	menuBrush->Append(miBrushHeight, _("Height"), menuBrushHeight);
 	
 	//surface
 	menuBrushSurface= new wxMenu();
-	menuBrushSurface->AppendCheckItem(miBrushSurface+1, "1 - Grass");
-	menuBrushSurface->AppendCheckItem(miBrushSurface+2, "2 - Secondary Grass");
-	menuBrushSurface->AppendCheckItem(miBrushSurface+3, "3 - Road");
-	menuBrushSurface->AppendCheckItem(miBrushSurface+4, "4 - Stone");
-	menuBrushSurface->AppendCheckItem(miBrushSurface+5, "5 - Custom");
-	menuBrush->Append(miBrushSurface, "Surface", menuBrushSurface);
+	menuBrushSurface->AppendCheckItem(miBrushSurface+1, _("1 - Grass"));
+	menuBrushSurface->AppendCheckItem(miBrushSurface+2, _("2 - Secondary Grass"));
+	menuBrushSurface->AppendCheckItem(miBrushSurface+3, _("3 - Road"));
+	menuBrushSurface->AppendCheckItem(miBrushSurface+4, _("4 - Stone"));
+	menuBrushSurface->AppendCheckItem(miBrushSurface+5, _("5 - Custom"));
+	menuBrush->Append(miBrushSurface, _("Surface"), menuBrushSurface);
 	
 	//objects
 	menuBrushObject= new wxMenu();
-	menuBrushObject->AppendCheckItem(miBrushObject+1, "0 - None");
-	menuBrushObject->AppendCheckItem(miBrushObject+2, "1 - Tree");
-	menuBrushObject->AppendCheckItem(miBrushObject+3, "2 - Dead Tree");
-	menuBrushObject->AppendCheckItem(miBrushObject+4, "3 - Stone");
-	menuBrushObject->AppendCheckItem(miBrushObject+5, "4 - Bush");
-	menuBrushObject->AppendCheckItem(miBrushObject+6, "5 - Water Object");
-	menuBrushObject->AppendCheckItem(miBrushObject+7, "6 - Custom 1");
-	menuBrushObject->AppendCheckItem(miBrushObject+8, "7 - Custom 2");
-	menuBrushObject->AppendCheckItem(miBrushObject+9, "8 - Custom 3");
-	menuBrushObject->AppendCheckItem(miBrushObject+10, "9 - Custom 4");
-	menuBrushObject->AppendCheckItem(miBrushObject+11, "10 - Custom 5");
-	menuBrush->Append(miBrushObject, "Object", menuBrushObject);
+	menuBrushObject->AppendCheckItem(miBrushObject+1, _("0 - None"));
+	menuBrushObject->AppendCheckItem(miBrushObject+2, _("1 - Tree"));
+	menuBrushObject->AppendCheckItem(miBrushObject+3, _("2 - Dead Tree"));
+	menuBrushObject->AppendCheckItem(miBrushObject+4, _("3 - Stone"));
+	menuBrushObject->AppendCheckItem(miBrushObject+5, _("4 - Bush"));
+	menuBrushObject->AppendCheckItem(miBrushObject+6, _("5 - Water Object"));
+	menuBrushObject->AppendCheckItem(miBrushObject+7, _("6 - Custom 1"));
+	menuBrushObject->AppendCheckItem(miBrushObject+8, _("7 - Custom 2"));
+	menuBrushObject->AppendCheckItem(miBrushObject+9, _("8 - Custom 3"));
+	menuBrushObject->AppendCheckItem(miBrushObject+10, _("9 - Custom 4"));
+	menuBrushObject->AppendCheckItem(miBrushObject+11, _("10 - Custom 5"));
+	menuBrush->Append(miBrushObject, _("Object"), menuBrushObject);
 
 	//resources
 	menuBrushResource= new wxMenu();
-	menuBrushResource->AppendCheckItem(miBrushResource+1, "0 - None");
-	menuBrushResource->AppendCheckItem(miBrushResource+2, "1 - Custom 1");
-	menuBrushResource->AppendCheckItem(miBrushResource+3, "2 - Custom 2");
-	menuBrushResource->AppendCheckItem(miBrushResource+4, "3 - Custom 3");
-	menuBrushResource->AppendCheckItem(miBrushResource+5, "4 - Custom 4");
-	menuBrushResource->AppendCheckItem(miBrushResource+6, "5 - Custom 5");
-	menuBrush->Append(miBrushResource, "Resource", menuBrushResource);
+	menuBrushResource->AppendCheckItem(miBrushResource+1, _("0 - None"));
+	menuBrushResource->AppendCheckItem(miBrushResource+2, _("1 - Custom 1"));
+	menuBrushResource->AppendCheckItem(miBrushResource+3, _("2 - Custom 2"));
+	menuBrushResource->AppendCheckItem(miBrushResource+4, _("3 - Custom 3"));
+	menuBrushResource->AppendCheckItem(miBrushResource+5, _("4 - Custom 4"));
+	menuBrushResource->AppendCheckItem(miBrushResource+6, _("5 - Custom 5"));
+	menuBrush->Append(miBrushResource, _("Resource"), menuBrushResource);
 
 	//players
 	menuBrushStartLocation= new wxMenu();
-	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+1, "1 - Player 1");
-	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+2, "2 - Player 2");
-	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+3, "3 - Player 3");
-	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+4, "4 - Player 4");
-	menuBrush->Append(miBrushStartLocation, "Player", menuBrushStartLocation);
+	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+1, _("1 - Player 1"));
+	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+2, _("2 - Player 2"));
+	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+3, _("3 - Player 3"));
+	menuBrushStartLocation->AppendCheckItem(miBrushStartLocation+4, _("4 - Player 4"));
+	menuBrush->Append(miBrushStartLocation, _("Player"), menuBrushStartLocation);
 
-	menuBar->Append(menuBrush, "Brush");
+	menuBar->Append(menuBrush, _("Brush"));
 
 	//radius
 	menuRadius= new wxMenu();
 	for(int i=0; i<radiusCount; ++i){
-		menuRadius->AppendCheckItem(miRadius+i, intToStr(i+1).c_str());
+		menuRadius->AppendCheckItem(miRadius+i, intToWxStr(i+1).c_str());
 	}
 	menuRadius->Check(miRadius, true);
-	menuBar->Append(menuRadius, "Radius");
+	menuBar->Append(menuRadius, _("Radius"));
 
 	SetMenuBar(menuBar);
 }
 
+wxString MainWindow::intToWxStr(int i) {
+	return wxString() << i;
+}
+
 void MainWindow::init(){
 	glCanvas->SetCurrent();
 	program= new Program(GetClientSize().x, GetClientSize().y);
@@ -189,17 +193,17 @@
 }
 
 void MainWindow::onMenuFileLoad(wxCommandEvent &event){
-	string fileName;
+	wxString fileName;
 	
 	wxFileDialog fileDialog(this);
-	fileDialog.SetWildcard("Glest Binary Map (*.gbm)|*.gbm");
+	fileDialog.SetWildcard(_("Glest Binary Map (*.gbm)|*.gbm"));
 	if(fileDialog.ShowModal()==wxID_OK){
 		fileName= fileDialog.GetPath();
-		program->loadMap(fileName);
+		program->loadMap(wxStrToStr(fileName));
 	}
 
 	currentFile= fileName;
-	SetTitle((winHeader + "; " + currentFile).c_str());
+	SetTitle((winHeader + wxT("; ") + currentFile).c_str());
 }
 
 void MainWindow::onMenuFileSave(wxCommandEvent &event){
@@ -208,22 +212,38 @@
 		onMenuFileSaveAs(ev);
 	}
 	else{
-		program->saveMap(currentFile);
+		program->saveMap(wxStrToStr(currentFile));
 	}
 }
 
+static string wxStrToStr(wxString &s){
+#ifdef _UNICODE
+	return (const char*)s.mb_str(wxConvUTF8);
+#else
+	return s.c_str();
+#endif
+}
+
+static wxString strToWxStr(string &s){
+#ifdef _UNICODE
+	return wxString(s.c_str(), wxConvUTF8);
+#else
+	return wxString(s.c_str());
+#endif
+}
+
 void MainWindow::onMenuFileSaveAs(wxCommandEvent &event){
-	string fileName;
+	wxString fileName;
 	
-	wxFileDialog fileDialog(this, "Select file", "", "", "*.gbm", wxSAVE);
-	fileDialog.SetWildcard("Glest Binary Map (*.gbm)|*.gbm");
+	wxFileDialog fileDialog(this, _("Select file"), wxT(""), wxT(""), wxT("*.gbm"), wxSAVE);
+	fileDialog.SetWildcard(_("Glest Binary Map (*.gbm)|*.gbm"));
 	if(fileDialog.ShowModal()==wxID_OK){
 		fileName= fileDialog.GetPath();
-		program->saveMap(fileName);
+		program->saveMap(wxStrToStr(fileName));
 	}
 
 	currentFile= fileName;
-	SetTitle((winHeader + "; " + currentFile).c_str());
+	SetTitle((winHeader + wxT("; ") + currentFile).c_str());
 }
 
 void MainWindow::onMenuFileExit(wxCommandEvent &event){
@@ -246,7 +266,7 @@
 			strToInt(simpleDialog.getValue("Surface")));
 	}
 	catch(const exception &e){
-		wxMessageDialog(NULL, e.what(), "Exception", wxOK | wxICON_ERROR).ShowModal();
+		wxMessageDialog(NULL, wxString(e.what(), wxConvUTF8), _("Exception"), wxOK | wxICON_ERROR).ShowModal();
 	}
 
 }
@@ -260,7 +280,7 @@
 		program->resetPlayers(strToInt(simpleDialog.getValue("Players")));
 	}
 	catch(const exception &e){
-		wxMessageDialog(NULL, e.what(), "Exception", wxOK | wxICON_ERROR).ShowModal();
+		wxMessageDialog(NULL, wxString(e.what(), wxConvUTF8), _("Exception"), wxOK | wxICON_ERROR).ShowModal();
 	}
 }
 
@@ -280,7 +300,7 @@
 			strToInt(simpleDialog.getValue("Surface")));
 	}
 	catch(const exception &e){
-		wxMessageDialog(NULL, e.what(), "Exception", wxOK | wxICON_ERROR).ShowModal();
+		wxMessageDialog(NULL, wxString(e.what(), wxConvUTF8), _("Exception"), wxOK | wxICON_ERROR).ShowModal();
 	}
 }
 
@@ -312,7 +332,7 @@
 			strToInt(simpleDialog.getValue("Surface2")));
 	}
 	catch(const exception &e){
-		wxMessageDialog(NULL, e.what(), "Exception", wxOK | wxICON_ERROR).ShowModal();
+		wxMessageDialog(NULL, wxString(e.what(), wxConvUTF8), _("Exception"), wxOK | wxICON_ERROR).ShowModal();
 	}
 }
 
@@ -342,7 +362,7 @@
 			strToInt(simpleDialog.getValue("Water Level")));
 	}
 	catch(const exception &e){
-		wxMessageDialog(NULL, e.what(), "Exception", wxOK | wxICON_ERROR).ShowModal();
+		wxMessageDialog(NULL, wxString(e.what(), wxConvUTF8), _("Exception"), wxOK | wxICON_ERROR).ShowModal();
 	}
 }
 
@@ -351,11 +371,11 @@
 }
 
 void MainWindow::onMenuMiscAbout(wxCommandEvent &event){
-	wxMessageDialog(NULL, "Glest Map Editor - Copyright 2004 The Glest Team", "About").ShowModal();
+	wxMessageDialog(NULL, _("Glest Map Editor - Copyright 2004 The Glest Team"), _("About")).ShowModal();
 }
 
 void MainWindow::onMenuMiscHelp(wxCommandEvent &event){
-	wxMessageDialog(NULL, "Left mouse click: draw\nRight mouse drag: move\nCenter mouse drag: zoom", "Help").ShowModal();
+	wxMessageDialog(NULL, _("Left mouse click: draw\nRight mouse drag: move\nCenter mouse drag: zoom"), _("Help")).ShowModal();
 }
 
 void MainWindow::onMenuBrushHeight(wxCommandEvent &event){
@@ -481,7 +501,7 @@
 // =====================================================
 
 GlCanvas::GlCanvas(MainWindow *	mainWindow):
-	wxGLCanvas(mainWindow, -1)
+	wxGLCanvas(mainWindow, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, wxT("GLCanvas"))
 {
 	this->mainWindow = mainWindow;
 }
@@ -518,15 +538,15 @@
 
 void SimpleDialog::show(){
 
-	Create(NULL, -1, "Edit Values");
+	Create(NULL, -1, _("Edit Values"));
 
 	wxSizer *sizer= new wxFlexGridSizer(2);
 
 	vector<wxTextCtrl*> texts;
 
 	for(Values::iterator it= values.begin(); it!=values.end(); ++it){
-		sizer->Add(new wxStaticText(this, -1, it->first.c_str()), 0, wxALL, 5);
-		wxTextCtrl *text= new wxTextCtrl(this, -1, it->second.c_str());
+		sizer->Add(new wxStaticText(this, -1, strToWxStr(it->first)), 0, wxALL, 5);
+		wxTextCtrl *text= new wxTextCtrl(this, -1, strToWxStr(it->second));
 		sizer->Add(text, 0, wxALL, 5);
 		texts.push_back(text);
 	}
@@ -535,7 +555,8 @@
 	ShowModal();
 
 	for(int i=0; i<texts.size(); ++i){
-		values[i].second= texts[i]->GetValue();
+		wxString tmp = texts[i]->GetValue();
+		values[i].second= wxStrToStr(tmp);
 	}
 }
 
@@ -555,7 +576,7 @@
 		return wxApp::MainLoop();
 	}
 	catch(const exception &e){
-		wxMessageDialog(NULL, e.what(), "Exception", wxOK | wxICON_ERROR).ShowModal();
+		wxMessageDialog(NULL, wxString(e.what(), wxConvUTF8), _("Exception"), wxOK | wxICON_ERROR).ShowModal();
 	}
 	return 0;
 }
diff -Naur glest-source-3.0.0.org/glest_map_editor/main.h glest-source-3.0.0/glest_map_editor/main.h
--- glest_map_editor/main.h	2007-09-06 17:16:30.000000000 +0200
+++ glest_map_editor/main.h	2008-02-01 14:52:18.000000000 +0100
@@ -26,8 +26,8 @@
 	DECLARE_EVENT_TABLE()
 
 private:
-	static const string versionString;
-	static const string winHeader;
+	static const wxString versionString;
+	static const wxString winHeader;
 	static const int heightCount= 11;
 	static const int surfaceCount= 5;
 	static const int objectCount= 11;
@@ -83,7 +83,7 @@
 	wxMenu *menuBrushStartLocation;
 	wxMenu *menuRadius;
 
-	string currentFile; 
+	wxString currentFile; 
 
 	int height;
 	int surface;
@@ -135,6 +135,8 @@
 
 	void uncheckBrush();
 	void uncheckRadius();
+private:
+	wxString intToWxStr(int i);
 };
 
 // =====================================================
@@ -173,6 +175,9 @@
 	void show();
 };
 
+static wxString strToWxStr(string &s);
+static string wxStrToStr(wxString &s);
+
 // =====================================================
 //	class App
 // =====================================================
